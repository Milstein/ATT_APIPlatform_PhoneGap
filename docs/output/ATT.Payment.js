Ext.data.JsonP.ATT_Payment({"parentMixins":[],"statics":{"css_var":[],"event":[],"css_mixin":[],"method":[],"cfg":[],"property":[]},"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/attPhoneGapPluginAPI.html#ATT-Payment' target='_blank'>attPhoneGapPluginAPI.js</a></div></pre><div class='doc-contents'><p><b>Introduction:</b></p>\n\n<p>The Payment API provides developers and merchants the ability to charge digital services directly to an AT&amp;T subscriber bill for payment.</p>\n\n<p><b>Description:</b></p>\n\n<p>Using the Payment API, a merchant may create new transactions and subscriptions, get the status of the transaction or subscription, and authorize refunds.</p>\n\n<p>The new transaction and subscription process includes:</p>\n\n<p>• Authentication of the end-user as an AT&amp;T Subscriber.</p>\n\n<p>• Presentation of an Advice-of-Charge (AOC) page and the opportunity to cancel.</p>\n\n<p> If the subscriber chooses to accept the charge, a Thank You message is presented.</p>\n\n<p>The merchant also has the option of automatically receiving notifications of refunds and subscription changes triggered through other AT&amp;T systems. Applications in the initial Sandbox state have lower limits on the quantity of transactions. All Sandbox payment transactions are refunded weekly. Further, in the Sandbox environment, a developer may set certain attributes for the application that would not be available to the developer in the production environment. Once an application has been promoted to the Production state, however, a more secure environment is maintained where most of the attributes are read-only and may be changed only by the AT&amp;T administrator. Organizations must have a merchant account set up for the Payment Service to work. If your organization does not have a merchant account, contact your Organizational Profile Administrator to arrange for one.</p>\n\n<p><b>The Payment API provides the following methods:</b></p>\n\n<p>• acknowledgeNotification</p>\n\n<p>• getNotification</p>\n\n<p>• getSubscriptionDetails</p>\n\n<p>• getSubscriptionStatus</p>\n\n<p>• getTransactionStatus</p>\n\n<p>• newSubscription</p>\n\n<p>• newTransaction</p>\n\n<p>• refundTransaction</p>\n\n<p><b>Usage</b></p>\n\n<p>Use the Notary Management API to:</p>\n\n<p>• Sign the payment request.</p>\n\n<p>• Redirect the user agent to the AT&amp;T server to obtain consent.</p>\n\n<p>• Get the response, either an authorization code or an error, through the redirect back from the consent process.</p>\n\n<p>• Use the getTransactionStatus or getSubscriptionStatus methods with the authorization code to get the transaction identifier that is needed for refunds.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-acknowledgeNotification' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='ATT.Payment'>ATT.Payment</span><br/><a href='source/attPhoneGapPluginAPI.html#ATT-Payment-method-acknowledgeNotification' target='_blank' class='view-source'>view source</a></div><a href='#!/api/ATT.Payment-method-acknowledgeNotification' class='name expandable'>acknowledgeNotification</a>( <span class='pre'>options, success, error</span> ) : Object</div><div class='description'><div class='short'>Acknowledges the receipt of a notification and requests that further notifications be stopped for a specific Notifica...</div><div class='long'><p>Acknowledges the receipt of a notification and requests that further notifications be stopped for a specific NotificationID.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>Specifies a JSON object that contains properties for the following parameters:</p>\n<ul><li><span class='pre'>notificationId</span> : String<div class='sub-desc'><p>Specifies the identifier (ID) of the notification to be retrieved.</p>\n</div></li><li><span class='pre'>accept</span> : String<div class='sub-desc'><p>Specifies the format of the body of the object returned by this method.</p>\n\n<p>The acceptable values for this parameter are:</p>\n\n<p>• application/json</p>\n\n<p>• application/xml</p>\n\n<p>The default value for this parameter is: 'application/json'</p>\n</div></li></ul></div></li><li><span class='pre'>success</span> : Function<div class='sub-desc'><p>The callback function that is called when the method returns success.</p>\n</div></li><li><span class='pre'>error</span> : Function<div class='sub-desc'><p>The callback function that is called when the method returns an error.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>A JSON or XML formatted object that contains the response. The format of the returned object is specified by the value of the accept parameter in the call to the acknowledgeNotification method.</p>\n\n<p> <b>Example:</b></p>\n\n<p>The following is an example of the acknowledgeNotification method.</p>\n\n<pre><code>  acknowledgeNotification({\n      'notificationId' : 'ID of the notification that to be retrieved.'\n },function(data) {\n\n    success Callback\n\n }, function(error) {\n\n     error Callback\n\n });\n</code></pre>\n</div></li></ul></div></div></div><div id='method-getNotification' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='ATT.Payment'>ATT.Payment</span><br/><a href='source/attPhoneGapPluginAPI.html#ATT-Payment-method-getNotification' target='_blank' class='view-source'>view source</a></div><a href='#!/api/ATT.Payment-method-getNotification' class='name expandable'>getNotification</a>( <span class='pre'>options, success, error</span> ) : Object</div><div class='description'><div class='short'>Retrieves a notification object that has been received in a prior notification message as a result of having the serv...</div><div class='long'><p>Retrieves a notification object that has been received in a prior notification message as a result of having the server listen for notification messages.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>Specifies a JSON object that contains properties for the following parameters:</p>\n<ul><li><span class='pre'>notificationId</span> : String<div class='sub-desc'><p>Specifies the identifier (ID) of the notification that is retrieved.</p>\n</div></li><li><span class='pre'>accept</span> : String<div class='sub-desc'><p>Specifies the format of the body of the object returned by this method.</p>\n\n<p>The acceptable values for this parameter are:</p>\n\n<p>• application/json</p>\n\n<p>• application/xml</p>\n\n<p>The default value for this parameter is: 'application/json'</p>\n</div></li></ul></div></li><li><span class='pre'>success</span> : Function<div class='sub-desc'><p>The callback function that is called when the method returns success.</p>\n</div></li><li><span class='pre'>error</span> : Function<div class='sub-desc'><p>The callback function that is called when the method returns an error.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>A JSON or XML formatted object that contains the response. The format of the returned object is specified by the value of the accept parameter in the call to the getNotification method.</p>\n\n<p> <b>Example:</b></p>\n\n<p>The following is an example of the getNotification method.</p>\n\n<pre><code>  getNotification({\n      'notificationId' : 'ID of the notification that to be retrieved.'\n },function(data) {\n\n    success Callback\n\n }, function(error) {\n\n     error Callback\n\n });\n</code></pre>\n</div></li></ul></div></div></div><div id='method-getSubscriptionDetails' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='ATT.Payment'>ATT.Payment</span><br/><a href='source/attPhoneGapPluginAPI.html#ATT-Payment-method-getSubscriptionDetails' target='_blank' class='view-source'>view source</a></div><a href='#!/api/ATT.Payment-method-getSubscriptionDetails' class='name expandable'>getSubscriptionDetails</a>( <span class='pre'>options, success, error</span> ) : Object</div><div class='description'><div class='short'>Retrieves the details for a merchant subscription to which a consumer has subscribed. ...</div><div class='long'><p>Retrieves the details for a merchant subscription to which a consumer has subscribed. Merchants who manage consumers may use this method to determine the details of a subscription for a particular consumer.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>Specifies a JSON object that contains properties for the following parameters:</p>\n<ul><li><span class='pre'>consumerId</span> : String<div class='sub-desc'><p>Specifies the identifier (ID) of the consumer that uses the subscription. This identifier is a unique user ID generated in the payment system representing a unique subscriber.</p>\n</div></li><li><span class='pre'>merchantSubscriptionId</span> : String<div class='sub-desc'><p>Specifies the identifier (ID) of the merchant’s subscription. This must be a unique value for each merchant subscription.</p>\n</div></li><li><span class='pre'>accept</span> : String<div class='sub-desc'><p>Specifies the format of the body of the object returned by this method.</p>\n\n<p>• application/json</p>\n\n<p>• application/xml</p>\n\n<p>The default value for this parameter is: 'application/json'</p>\n</div></li></ul></div></li><li><span class='pre'>success</span> : Function<div class='sub-desc'><p>The callback function that is called when the method returns success.</p>\n</div></li><li><span class='pre'>error</span> : Function<div class='sub-desc'><p>The callback function that is called when the method returns an error.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>A JSON or XML formatted object that contains the details for the merchant subscription. The format of the returned object is specified by the value of the accept parameter in the call to the getSubscriptionDetails method.</p>\n\n<p> <b>Example:</b></p>\n\n<p>The following is an example of the getSubscriptionDetails method.</p>\n\n<pre><code>  getSubscriptionDetails({\n      'consumerId' : &lt;returns in response of Payment.getSubscriptionStatus&gt;,\n      'merchantSubscriptionId' : &lt;returns in response of Payment.getSubscriptionStatus&gt;,\n },function(data) {\n\n    success Callback\n\n }, function(error) {\n\n     error Callback\n\n });\n</code></pre>\n</div></li></ul></div></div></div><div id='method-getSubscriptionStatus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='ATT.Payment'>ATT.Payment</span><br/><a href='source/attPhoneGapPluginAPI.html#ATT-Payment-method-getSubscriptionStatus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/ATT.Payment-method-getSubscriptionStatus' class='name expandable'>getSubscriptionStatus</a>( <span class='pre'>options, success, error</span> ) : Object</div><div class='description'><div class='short'>Retrieves the status of a previously executed call to the newSubscription method. ...</div><div class='long'><p>Retrieves the status of a previously executed call to the newSubscription method. The TransactionId from the previously executed newSubscription method call is used to retrieve the status of the subscription. This means that the TransactionIds from any new subscriptions must be stored in order to retrieve the status of those subscriptions. This method returns the status as well as several other fields related to the purchase.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>Specifies a JSON object that contains properties for the following parameters:</p>\n<ul><li><span class='pre'>transactionId</span> : String<div class='sub-desc'><p>(Conditional Parameter) Specifies the transaction identifier (ID) generated by the AT&amp;T payment processing system for a purchase. This value is used for future transaction requests.</p>\n</div></li><li><span class='pre'>merchantTransactionId</span> : String<div class='sub-desc'><p>(Conditional Parameter) Specifies the transaction identifier (ID) generated in the merchant’s system. This ID must be unique on every purchase request.</p>\n</div></li><li><span class='pre'>subscriptionAuthCode</span> : String<div class='sub-desc'><p>(Conditional Parameter) Specifies the authentication code that is returned by AT&amp;T to the developer’s application service upon successful conclusion of the Payment.newSubscription request.</p>\n</div></li><li><span class='pre'>accept</span> : String<div class='sub-desc'><p>Specifies the format of the body of the object returned by this method.</p>\n\n<p>The acceptable values for this parameter are:</p>\n\n<p>• application/json</p>\n\n<p>• application/xml</p>\n\n<p>The default value for this parameter is: 'application/json'</p>\n</div></li></ul></div></li><li><span class='pre'>success</span> : Function<div class='sub-desc'><p>The callback function that is called when the method returns success.</p>\n</div></li><li><span class='pre'>error</span> : Function<div class='sub-desc'><p>The callback function that is called when the method returns an error.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>A JSON or XML formatted object that contains the subscription status. The format of the returned object is specified by the value of the accept parameter in the call to the getSubscriptionStatus method.</p>\n\n<p> <b>Example:</b></p>\n\n<p>The following is an example of the getSubscriptionStatus method.</p>\n\n<pre><code>  getSubscriptionStatus({\n       \"subscriptionAuthCode\" : &lt;The value returned by AT&amp;T to the Developer’s Application Service at upon successful conclusion of the Payment.newSubscription request.&gt;\n },function(data) {\n\n    success Callback\n\n }, function(error) {\n\n     error Callback\n\n });\n</code></pre>\n\n<p>Note: To get the SubscriptionStatus, pass any of the following IDs:</p>\n\n<p>• \"subscriptionAuthCode\" - The value returned by AT&amp;T to the Developer’s Application Service upon successful conclusion of the Payment.newSubscription request.</p>\n\n<p>• \"merchantTransactionId\" - The MerchantTransactionId specified in the initial call to the Notary.signedPayload method.</p>\n\n<p>• \"transactionId\" - The TransactionId returned by a previous call to getTransactionStatus method.</p>\n</div></li></ul></div></div></div><div id='method-getTransactionStatus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='ATT.Payment'>ATT.Payment</span><br/><a href='source/attPhoneGapPluginAPI.html#ATT-Payment-method-getTransactionStatus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/ATT.Payment-method-getTransactionStatus' class='name expandable'>getTransactionStatus</a>( <span class='pre'>options, success, error</span> ) : Object</div><div class='description'><div class='short'>Retrieves the status and all relevant information of a previously executed transaction. ...</div><div class='long'><p>Retrieves the status and all relevant information of a previously executed transaction.</p>\n\n<p><b>Syntax</b></p>\n\n<p>Three different identifiers may be used:</p>\n\n<p>• TransactionId returned by a previous call to the getTransactionStatus method.</p>\n\n<p>• TransactionAuthCode returned at the end of the Merchant Payment Acknowledgement process.</p>\n\n<p>• MerchantTransactionId specified in the initial call to the Notary.signedPayload method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>Specifies a JSON object that contains properties for the following parameters:</p>\n<ul><li><span class='pre'>transactionId</span> : String<div class='sub-desc'><p>(Conditional Parameter) Specifies the transaction identifier (ID) that is generated by the AT&amp;T payment processing system for a purchase. This ID is used for future transaction requests.</p>\n</div></li><li><span class='pre'>merchantTransactionId</span> : String<div class='sub-desc'><p>(Conditional Parameter) Specifies the transaction identifier (ID) in the merchant’s system. This ID must be unique on every purchase request.</p>\n</div></li><li><span class='pre'>transactionAuthCode</span> : String<div class='sub-desc'><p>(Conditional Parameter) Specifies the authentication code that is returned by AT&amp;T to the developer’s application service upon successful conclusion of the Payment.NewTransaction request.</p>\n</div></li><li><span class='pre'>accept</span> : String<div class='sub-desc'><p>Specifies the format of the body of the object returned by this method.</p>\n\n<p>The acceptable values for this parameter are:</p>\n\n<p>• application/json</p>\n\n<p>• application/xml</p>\n\n<p>The default value for this parameter is: 'application/json'</p>\n</div></li></ul></div></li><li><span class='pre'>success</span> : Function<div class='sub-desc'><p>The callback function that is called when the method returns success.</p>\n</div></li><li><span class='pre'>error</span> : Function<div class='sub-desc'><p>The callback function that is called when the method returns an error.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>A JSON or XML formatted object that contains the transaction status. The format of the returned object is specified by the value of the accept parameter in the call to the getTransactionStatus method.</p>\n\n<p> <b>Example:</b></p>\n\n<p>The following is an example of the getTransactionStatus method.</p>\n\n<pre><code>  getTransactionStatus({\n       \"transactionAuthCode\" : &lt;The value returned by AT&amp;T to the Developer’s Application Service at upon successful conclusion of the Payment.newTransaction request&gt;\n },function(data) {\n\n    success Callback\n\n }, function(error) {\n\n     error Callback\n\n });\n</code></pre>\n\n<p>Note: To get the TransactionStatus, pass any of the following IDs:</p>\n\n<p>• \"transactionAuthCode\" - The value returned by AT&amp;T to the Developer’s Application Service upon successful conclusion of the Payment.newTransaction request.</p>\n\n<p>• \"merchantTransactionId\" - The MerchantTransactionId specified in the initial call to the Notary.signedPayload method.</p>\n\n<p>•  \"transactionId\" - The TransactionId returned by a previous call to getTransactionStatus method.</p>\n</div></li></ul></div></div></div><div id='method-newSubscription' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='ATT.Payment'>ATT.Payment</span><br/><a href='source/attPhoneGapPluginAPI.html#ATT-Payment-method-newSubscription' target='_blank' class='view-source'>view source</a></div><a href='#!/api/ATT.Payment-method-newSubscription' class='name expandable'>newSubscription</a>( <span class='pre'>options, success, error</span> ) : Object</div><div class='description'><div class='short'>Sets up recurring charges for a specified amount, at a specified interval, for a specified number of times. ...</div><div class='long'><p>Sets up recurring charges for a specified amount, at a specified interval, for a specified number of times.</p>\n\n<p>This method authorizes both the merchant and the user of the subscription, and initializes the product and price data for of the transaction.</p>\n\n<p>Before this operation is invoked, the application must call the Notary.signedPayload method and provide a payload containing the required parameters (i.e. name-value-pairs) necessary to complete the purchase process.</p>\n\n<p>The Notary.signedPayload method returns the result in either JSON or XML format, as defined in the HTTP Header \"Accept\" included in the request to sign the document. The result will contain two name-value-pairs which will be utilized in formulating the request for this method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>Specifies a JSON object that contains properties for the following parameters:</p>\n<ul><li><span class='pre'>signedDocument</span> : String<div class='sub-desc'><p>Specifies the SignedDocument value that is returned by the Notary.signedPayload method.</p>\n</div></li><li><span class='pre'>signature</span> : String<div class='sub-desc'><p>Specifies the signature that is returned by Notary.signedPayload method.</p>\n</div></li><li><span class='pre'>clientId</span> : String<div class='sub-desc'><p>Specifies the client identifier (ID) of the application making the request.</p>\n</div></li><li><span class='pre'>accept</span> : String<div class='sub-desc'><p>Specifies the format of the body of the object returned by this method.</p>\n\n<p>The acceptable values for this parameter are:</p>\n\n<p>• application/json</p>\n\n<p>• application/xml</p>\n\n<p>The default value for this parameter is: 'application/json'</p>\n</div></li></ul></div></li><li><span class='pre'>success</span> : Function<div class='sub-desc'><p>The callback function that is called when the method returns success.</p>\n</div></li><li><span class='pre'>error</span> : Function<div class='sub-desc'><p>The callback function that is called when the method returns an error.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>A JSON or XML formatted object that contains the results. The format of the returned object is specified by the value of the accept parameter in the call to the newSubscription method.</p>\n\n<p> <b>Example:</b></p>\n\n<p>The following is an example of the newSubscription method.</p>\n\n<pre><code>  newSubscription({\n      \"signedDocument\" : &lt;Use value of SignedDocument returned by Notary.signedPayload&gt;,\n      \"signature\" : &lt;Use value of Signature returned by Notary.signedPayload&gt;,\n      \"clientId\" : &lt;accessKey value&gt;\n },function(data) {\n\n    success Callback\n\n }, function(error) {\n\n     error Callback\n\n });\n</code></pre>\n</div></li></ul></div></div></div><div id='method-newTransaction' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='ATT.Payment'>ATT.Payment</span><br/><a href='source/attPhoneGapPluginAPI.html#ATT-Payment-method-newTransaction' target='_blank' class='view-source'>view source</a></div><a href='#!/api/ATT.Payment-method-newTransaction' class='name expandable'>newTransaction</a>( <span class='pre'>options, success, error</span> ) : Object</div><div class='description'><div class='short'>Creates a new payment transaction for a one time product purchase (i.e. ...</div><div class='long'><p>Creates a new payment transaction for a one time product purchase (i.e. transactionType = SINGLE_PURCHASE).</p>\n\n<p>Before this method is invoked, the application must call the Notary.signedPayload method and provide a payload that contains the information (such as name-value-pairs) necessary to complete the purchase process.</p>\n\n<p>The Notary.signedPayload method returns the result in either JSON or XML format as designed by the HTTP Header Accept included in the request to sign the document. The response will contain two name-value-pairs that may be used to formulate the request for this method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>Specifies a JSON object that contains properties for the following parameters:</p>\n<ul><li><span class='pre'>signedDocument</span> : String<div class='sub-desc'><p>Specifies the SignedDocument value that is returned by the Notary.signedPayload method.</p>\n</div></li><li><span class='pre'>signature</span> : String<div class='sub-desc'><p>Specifies the signature that is returned by the Notary.signedPayload method.</p>\n</div></li><li><span class='pre'>clientId</span> : String<div class='sub-desc'><p>Specifies the client identifier (ID) of the application making the request.</p>\n</div></li><li><span class='pre'>accept</span> : String<div class='sub-desc'><p>Specifies the format of the body of the object returned by this method.</p>\n\n<p>The acceptable values for this parameter are:</p>\n\n<p>• application/json</p>\n\n<p>• application/xml</p>\n\n<p>The default value for this parameter is: 'application/json'</p>\n</div></li></ul></div></li><li><span class='pre'>success</span> : Function<div class='sub-desc'><p>The callback function that is called when the method returns success.</p>\n</div></li><li><span class='pre'>error</span> : Function<div class='sub-desc'><p>The callback function that is called when the method returns an error.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>A JSON or XML formatted object that contains the results. The format of the returned object is specified by the value of the accept parameter in the call to the newTransaction method.</p>\n\n<p><b>Example:</b></p>\n\n<p>The following is an example of the newTransaction method.</p>\n\n<pre><code>  newTransaction({\n      \"signedDocument\" : &lt;value of SignedDocument returned by Notary.signedPayload&gt;,\n      \"signature\" : &lt;value of Signature returned by Notary.signedPayload&gt;,\n      \"clientId\" : &lt;accessKey value&gt;\n },function(data) {\n\n    success Callback\n\n }, function(error) {\n\n     error Callback\n\n });\n</code></pre>\n</div></li></ul></div></div></div><div id='method-refundTransaction' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='ATT.Payment'>ATT.Payment</span><br/><a href='source/attPhoneGapPluginAPI.html#ATT-Payment-method-refundTransaction' target='_blank' class='view-source'>view source</a></div><a href='#!/api/ATT.Payment-method-refundTransaction' class='name expandable'>refundTransaction</a>( <span class='pre'>options, success, error</span> ) : Object</div><div class='description'><div class='short'>Refunds the value of a transaction to the original consumer. ...</div><div class='long'><p>Refunds the value of a transaction to the original consumer. The refundTransaction method is invoked through the merchant application and is automatically passed without additional approvals.</p>\n\n<p>There are specific limits configured on the number of refunds within a day, week, and month. These limits are configured for a merchant account in the AT&amp;T payment system.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>Specifies a JSON object that contains properties for the following parameters:</p>\n<ul><li><span class='pre'>body</span> : Object<div class='sub-desc'><p>Specifies a JSON object that contains properties for the following parameters:</p>\n<ul><li><span class='pre'>TransactionOperationStatus</span> : String<div class='sub-desc'><p>Specifies the operation status of the transaction. Acceptable values for this parameter is: \"Refunded\".</p>\n</div></li><li><span class='pre'>RefundReasonCode</span> : String<div class='sub-desc'><p>Specifies the predefined reason for the refund. Must be one of the values in a predefined list.</p>\n</div></li><li><span class='pre'>RefundReasonText</span> : String<div class='sub-desc'><p>Specifies the description of the reason for the refund.</p>\n</div></li></ul></div></li><li><span class='pre'>transactionId</span> : String<div class='sub-desc'><p>Specifies the original transaction identifier (ID) of the transaction.</p>\n</div></li><li><span class='pre'>action</span> : String<div class='sub-desc'><p>Specifies the action that is performed. The acceptable value of this parameter is: \"refund\".</p>\n</div></li><li><span class='pre'>contentType</span> : String<div class='sub-desc'><p>Specifies the format of content to be sent.</p>\n\n<p>Acceptable values for this parameter are:</p>\n\n<p>• application/json</p>\n\n<p>• application/xml</p>\n\n<p>• application/x-www-form-urlencoded.</p>\n</div></li><li><span class='pre'>accept</span> : String<div class='sub-desc'><p>Specifies the format of the body of the object returned by this method.</p>\n\n<p>The acceptable values for this parameter are:</p>\n\n<p>• application/json</p>\n\n<p>• application/xml</p>\n\n<p>The default value for this parameter is: 'application/json'</p>\n</div></li></ul></div></li><li><span class='pre'>success</span> : Function<div class='sub-desc'><p>The callback function that is called when the method returns success.</p>\n</div></li><li><span class='pre'>error</span> : Function<div class='sub-desc'><p>The callback function that is called when the method returns error.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>A JSON or XML formatted object that contains the response. The format of the returned object is specified by the value of the accept parameter in the call to the refundTransaction method.</p>\n\n<p> <strong>Examples:</strong></p>\n\n<p><b>Example 1.</b> The following example of the refundTransaction method uses a contentType of 'application/json'.</p>\n\n<pre><code> refundTransaction({\n              \"body\":{\"TransactionOperationStatus\":&lt;value&gt;, \"RefundReasonCode\":value, \"RefundReasonText\":&lt;value&gt;},\n              \"contentType\" : \"application/json\",\n              'transactionId' : TransactionId returned by a call to getTransactionStatus,\n              'action' : &lt;action value&gt;\n  }, function(data) {\n\n      success Callback\n\n  }, function(error) {\n\n      error Callback\n\n });\n</code></pre>\n\n<p><b>Example 2.</b> The following example of the refundTransaction method uses a contentType of 'application/xml'.</p>\n\n<pre><code> refundTransaction({\n               \"body\":\"&lt;RefundTransactionRequest&gt;&lt;TransactionOperationStatus&gt;value&lt;/TransactionOperationStatus&gt;&lt;RefundReasonCode&gt;value&lt;/RefundReasonCode&gt; &lt;RefundReasonText&gt;value&lt;/RefundReasonText&gt;&lt;/RefundTransactionRequest&gt;\",\n               \"contentType\" : \"application/xml\",\n               'transactionId' : TransactionId returned by a call to getTransactionStatus,\n               'action' : &lt;action value&gt;\n  }, function(data) {\n\n      success Callback\n\n  }, function(error) {\n\n      error Callback\n\n  });\n</code></pre>\n</div></li></ul></div></div></div></div></div></div></div>","tagname":"class","inheritable":null,"singleton":false,"override":null,"html_meta":{},"mixins":[],"files":[{"href":"attPhoneGapPluginAPI.html#ATT-Payment","filename":"attPhoneGapPluginAPI.js"}],"linenr":309,"members":{"css_var":[],"event":[],"css_mixin":[],"method":[{"tagname":"method","owner":"ATT.Payment","name":"acknowledgeNotification","id":"method-acknowledgeNotification","meta":{}},{"tagname":"method","owner":"ATT.Payment","name":"getNotification","id":"method-getNotification","meta":{}},{"tagname":"method","owner":"ATT.Payment","name":"getSubscriptionDetails","id":"method-getSubscriptionDetails","meta":{}},{"tagname":"method","owner":"ATT.Payment","name":"getSubscriptionStatus","id":"method-getSubscriptionStatus","meta":{}},{"tagname":"method","owner":"ATT.Payment","name":"getTransactionStatus","id":"method-getTransactionStatus","meta":{}},{"tagname":"method","owner":"ATT.Payment","name":"newSubscription","id":"method-newSubscription","meta":{}},{"tagname":"method","owner":"ATT.Payment","name":"newTransaction","id":"method-newTransaction","meta":{}},{"tagname":"method","owner":"ATT.Payment","name":"refundTransaction","id":"method-refundTransaction","meta":{}}],"cfg":[],"property":[]},"alternateClassNames":[],"aliases":{},"inheritdoc":null,"component":false,"private":null,"subclasses":[],"name":"ATT.Payment","extends":null,"uses":[],"mixedInto":[],"superclasses":[],"id":"class-ATT.Payment","enum":null,"meta":{},"requires":[]});